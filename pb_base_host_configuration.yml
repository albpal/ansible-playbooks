# This Ansible playbook performs the basic setup for my servers.
#       NOTE: After run this playbook you wont be able to run it again. It uses root user which is disabled for SSH connections after run it
---
- hosts: mainhost
  remote_user: root
  vars:
    # The password has been generated with the command line: python -c 'import crypt; print(crypt.crypt("themostsecretword", crypt.mksalt(crypt.METHOD_SHA512)))'
    apalau_password: $6$XQ3iB.s4FHfrdKeI$OP3pDtrWHUCU31Ma5x/jZAdUHKYoF4/0K/G9Q3QE2tYLc/rcq2raolB1r8rVB7V07T6pDNlxuadFOSUvCfqKV0
  tasks:
  - name: ensure yum-utils is at the latest version
    yum: name=yum-utils state=latest
  - name: ensure python is at the latest version
    yum: name=python state=latest
  - name: ensure vim is at the latest version
    yum: name=vim state=latest
  - name: ensure man is at the latest version
    yum: name=man state=latest
  - name: ensure java 1.8 is installed
    yum: name=java-1.8.0-openjdk state=present
  - name: ensure net-tools is at the latest version
    yum: name=net-tools state=latest
  - name: ensure libselinux-python is at the latest version
    yum: name=libselinux-python state=latest
  - name: ensure policycoreutils-python is at the latest version
    yum: name=policycoreutils-python state=latest
  - name: Setup alternate SSH port
    lineinfile:
       dest: "/etc/ssh/sshd_config"
       regexp: "^Port"
       line: "Port 23033"
    notify: "Restart sshd"
  - name: Set SELinux to Permissive
    selinux:
       state: permissive
       policy: targeted
  - name: ensure group admins is already created
    group:
       name: "admins"
       state: present
  - name: ensure user apalau exists
    user:
       name: apalau
       shell: /bin/bash
       comment: "Albert Palau"
       group: admins
       update_password: on_create
       password: "{{apalau_password}}"
       state: present
  - name: Allow 'admins' group to have password sudo
    lineinfile:
       dest: /etc/sudoers
       state: present
       insertafter: '^%wheel'
       line: '%admins ALL=(ALL) ALL'
  - name: remove root ssh login
    lineinfile:
       dest: /etc/ssh/sshd_config
       state: present
       regexp: '^#PermitRootLogin yes'
       line: 'PermitRootLogin no'
  - name: AllowGroups admins
    lineinfile:
       dest: /etc/ssh/sshd_config
       state: present
       insertafter: EOF
       line: 'AllowGroups admins'
    notify: "Restart sshd"
  
  handlers:
    - name: Restart sshd
      service:
        name: sshd
        state: restarted

